{"version":3,"sources":["hooks/useInterval.ts","helpers.ts","components/Controls/styles.ts","components/Controls/index.tsx","components/Grid/styles.ts","components/Grid/index.tsx","components/Arrows/styles.ts","components/Arrows/index.tsx","components/GameOver/styles.ts","components/GameOver/index.tsx","components/Instructions/styles.ts","components/Instructions/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","foodArray","getRandomFood","Math","floor","random","length","getFoodPosition","snake","first","includes","getDirection","firstPos","secondPos","checkIfCorner","number","index","indexOf","prev","next","getHeadDirection","direction","pos","defaults","Container","styled","div","Button","button","QuestionButton","Score","p","Controls","onClick","score","highScore","openInstructions","dots","Cell","Body","corner","Head","Tail","opacity","Eye","Pupil","Grid","food","foodPosition","tailAppearing","useState","tailOpacity","setTailOpacity","fadeInterval","setFadeInterval","Array","from","keys","map","key","Row","Arrows","Overlay","Text","h1","GameOver","onClose","role","aria-label","Instructions","App","setSnake","setDirection","interval","setScore","instructions","toggleInstructions","setTailAppearing","gameOver","toggleGameOver","setFoodPosition","setFood","localStorage","getItem","setHighScore","turn","newDirection","replace","toLowerCase","checkPosition","useCallback","i","slice","setItem","toString","newSnake","shift","getNewSnake","className","tabIndex","onKeyDown","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c171dec7.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\n\ntype Callback = () => ( unknown | void );\n\nexport default function useInterval(callback: Callback, delay: number | null) {\n  const savedCallback = useRef<Callback | null>();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      if (savedCallback.current) savedCallback?.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","export const originalSnake = (): number[] => [137, 138, 139, 140];\n\nconst foodArray = ['🍎', '🍏', '🍓', '🥭', '🍐', '🍌', '🍅', '🥕', '🥔', '🥬'];\n\nexport const getRandomFood = (): string => {\n  return foodArray[Math.floor(Math.random() * foodArray.length)];\n};\n\nexport const getFoodPosition = (snake: number[]): number => {\n  const first = Math.floor(Math.random() * 289);\n  return snake.includes(first) ? getFoodPosition(snake) : first;\n};\n\nexport function getNewSnake(snake: number[], direction: string): number[] {\n  snake.shift();\n  switch (direction) {\n    case 'right':\n      if (snake[snake.length - 1] % 17 === 16) {\n        return [...snake, snake[snake.length - 1] - 16];\n      }\n      return [...snake, snake[snake.length - 1] + 1];\n    case 'left':\n      if (snake[snake.length - 1] % 17 === 0) {\n        return [...snake, snake[snake.length - 1] + 16];\n      }\n      return [...snake, snake[snake.length - 1] - 1];\n    case 'down':\n      if (272 <= snake[snake.length - 1] && snake[snake.length - 1] <= 288) {\n        return [...snake, snake[snake.length - 1] - 272];\n      }\n      return [...snake, snake[snake.length - 1] + 17];\n    case 'up':\n      if (0 <= snake[snake.length - 1] && snake[snake.length - 1] <= 16) {\n        return [...snake, snake[snake.length - 1] + 272];\n      }\n      return [...snake, snake[snake.length - 1] - 17];\n    default:\n      return snake;\n  }\n};\n\nexport function getDirection(firstPos: number, secondPos: number): string|null {\n  switch (firstPos - secondPos) {\n    case 1:\n    case -16:\n      return 'right';\n    case -1:\n    case 16:\n      return 'left';\n    case 17:\n    case -272:\n      return 'down';\n    case -17:\n    case 272:\n      return 'up';\n    default:\n      return null;\n  }\n};\n\nexport const checkIfCorner = (snake: number[], number: number): string|null => {\n  const index = snake.indexOf(number);\n  const prev = snake[index - 1];\n  const next = snake[index + 1];\n  if (\n    (getDirection(number, prev) === 'right' && getDirection(next, number) === 'down') ||\n    (getDirection(number, prev) === 'up' && getDirection(next, number) === 'left')\n  ) {\n    return 'top-right';\n  } else if (\n    (getDirection(number, prev) === 'up' && getDirection(next, number) === 'right') ||\n    (getDirection(number, prev) === 'left' && getDirection(next, number) === 'down')\n  ) {\n    return 'top-left';\n  } else if (\n    (getDirection(number, prev) === 'down' && getDirection(next, number) === 'left') ||\n    (getDirection(number, prev) === 'right' && getDirection(next, number) === 'up')\n  ) {\n    return 'bottom-right';\n  } else if (\n    (getDirection(number, prev) === 'left' && getDirection(next, number) === 'up') ||\n    (getDirection(number, prev) === 'down' && getDirection(next, number) === 'right')\n  ) {\n    return 'bottom-left';\n  }\n  return null;\n};\n\nexport function getHeadDirection(direction: string, pos: number, prev: number): string|null {\n  if (\n    (direction === 'right' && pos % 17 !== 0) ||\n    (direction === 'left' && pos % 17 !== 16) ||\n    (direction === 'down' && pos > 16) ||\n    (direction === 'up' && pos < 272)\n  ) {\n    return getDirection(pos, prev);\n  } else {\n    return direction;\n  }\n};","import styled from 'styled-components';\n\nconst defaults = `\n  margin: 10px;\n  border: 2px solid orange;\n  font-size: 3vw;\n  @media screen and (min-width: 600px) {\n    font-size: 18px;\n    border-width: 4px;\n  }\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const Button = styled.button`\n  padding: 5px;\n  background-color: orange;\n  border-radius: 10px;\n  font-size: 3vw;\n  ${defaults}\n  @media screen and (min-width: 600px) {\n    width: 64px;\n  }\n`;\n\nexport const QuestionButton = styled.button`\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: orange;\n  border-radius: 50%;\n  ${defaults}\n`;\n\nexport const Score = styled.p`\n  padding: 5px;\n  background-color: transparent;\n  border-radius: 10px;\n  ${defaults}\n`;\n","import React from 'react';\nimport { Container, Button, QuestionButton, Score } from './styles';\n\ninterface Props {\n  onClick: () => void,\n  score: number,\n  highScore: number,\n  openInstructions: () => void\n}\nconst Controls: React.FC<Props> = ({ onClick, score, highScore, openInstructions }) => (\n  <Container>\n    <Button onClick={onClick}>PLAY</Button>\n    <Score>Score: {score}</Score>\n    <Score>High Score: {highScore}</Score>\n    <QuestionButton onClick={openInstructions}>?</QuestionButton>\n  </Container>\n);\n\n\nexport default Controls;\n","import styled from 'styled-components';\n\nconst dots = `\n  background-color: blue;\n  background-image: radial-gradient(darkblue 15%, transparent 16%),\n  radial-gradient(darkblue 15%, transparent 16%);\n  background-size: 15px 15px;\n  background-position: 0 0, 7.5px 7.5px;\n`;\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-rows: repeat(17, 30px);\n  grid-template-columns: repeat(17, 30px);\n  margin: 5px;\n  @media screen and (max-width: 600px) {\n    grid-template-rows: repeat(17, 5vw);\n    grid-template-columns: repeat(17, 5vw);\n  }\n`;\n\ntype CellProps = {\n  number: number\n}\n\nexport const Cell = styled.div<CellProps>(({ number }) =>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(50, 168, 82, ${number % 2 === 0 ? 0.8 : 0.5});\n  font-size: 24px;\n  @media screen and (max-width: 600px) {\n    font-size: 3vw;\n  }\n`);\n\ntype BodyProps = {\n  corner?: string|null\n}\n\nexport const Body = styled.div<BodyProps>(({ corner }) =>`\n  width: 30px;\n  height: 30px;\n  ${dots}\n  display: flex;\n  border-top-right-radius: ${corner === 'top-right' ? '50%' : 0};\n  border-bottom-right-radius: ${corner === 'bottom-right' ? '50%' : 0};\n  border-bottom-left-radius: ${corner === 'bottom-left' ? '50%' : 0};\n  border-top-left-radius: ${corner === 'top-left' ? '50%' : 0};\n  @media screen and (max-width: 600px) {\n    width: 5vw;\n    height: 5vw;\n  }\n`);\n\ntype Props = {\n  direction: string|null,\n  opacity?: number\n}\n\nexport const Head = styled.div<Props>(({ direction }) =>`\n  width: 30px;\n  height: 30px;\n  ${dots}\n  display: flex;\n  flex-direction: ${direction === 'up' || direction === 'down' ? 'row' : 'column'};\n  border-top-right-radius: ${direction === 'right' || direction === 'up' ? '50%' : 0};\n  border-bottom-right-radius: ${direction === 'right' || direction === 'down' ? '50%' : 0};\n  border-bottom-left-radius: ${direction === 'left' || direction === 'down' ? '50%' : 0};\n  border-top-left-radius: ${direction === 'left' || direction === 'up' ? '50%' : 0};\n  align-items: center;\n  justify-content: space-around;\n  @media screen and (max-width: 600px) {\n    width: 5vw;\n    height: 5vw;\n  }\n`);\n\nexport const Tail = styled.div<Props>(({ direction, opacity }) =>`\n  width: 30px;\n  height: 30px;\n  ${dots}\n  display: flex;\n  border-top-right-radius: ${direction === 'left' || direction === 'down' ? '50%' : 0};\n  border-bottom-right-radius: ${direction === 'left' || direction === 'up' ? '50%' : 0};\n  border-bottom-left-radius: ${direction === 'right' || direction === 'up' ? '50%' : 0};\n  border-top-left-radius: ${direction === 'right' || direction === 'down' ? '50%' : 0};\n  opacity: ${opacity};\n  @media screen and (max-width: 600px) {\n    width: 5vw;\n    height: 5vw;\n  }\n`);\n\nexport const Eye = styled.div<Props>(({ direction }) =>`\n  width: 5px;\n  height: 5px;\n  border-radius: 50%;\n  background-color: white;\n  display: flex;\n  align-items: ${direction === 'down' ? 'flex-end' : direction === 'up' ? 'flex-start' : 'center'};\n  justify-content: ${direction === 'right' ? 'flex-end' : direction === 'left' ? 'flex-start' : 'center'};\n  @media screen and (max-width: 600px) {\n    width: 3px;\n    height: 3px;\n  }\n`);\n\nexport const Pupil = styled.div`\n  width: 3px;\n  height: 3px;\n  border-radius: 50%;\n  background-color: black;\n  @media screen and (max-width: 600px) {\n    width: 1px;\n    height: 1px;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport useInterval from '../../hooks/useInterval';\nimport { getDirection, checkIfCorner, getHeadDirection } from '../../helpers';\nimport { Container, Cell, Head, Body, Tail, Eye, Pupil } from './styles';\n\ninterface Props {\n  snake: number[],\n  food: string|null,\n  foodPosition: number|null,\n  direction: string,\n  tailAppearing: boolean\n}\n\nconst Grid: React.FC<Props> = ({ snake, food, foodPosition, direction, tailAppearing }) => {\n  const [tailOpacity, setTailOpacity] = useState<number>(1);\n  const [fadeInterval, setFadeInterval] = useState<number|null>(null);\n\n  useInterval(() => {\n    if (tailOpacity < 1) setTailOpacity(tailOpacity + 0.1);\n  }, fadeInterval);\n\n  useEffect(() => {\n    if (tailAppearing) {\n      setTailOpacity(0);\n      setFadeInterval(100);\n    }\n  }, [tailAppearing]);\n\n  return (\n    <Container>\n      {Array.from(Array(289).keys()).map(number => (\n        <Cell key={number} number={number}>\n          {snake[snake.length - 1] === number ? (\n            <Head direction={getHeadDirection(direction, snake[snake.length - 1], snake[snake.length - 2])}>\n              <Eye direction={getHeadDirection(direction, snake[snake.length - 1], snake[snake.length - 2])}>\n                <Pupil />\n              </Eye>\n              <Eye direction={getHeadDirection(direction, snake[snake.length - 1], snake[snake.length - 2])}>\n                <Pupil />\n              </Eye>\n            </Head>\n          ) : snake[0] === number ? (\n            <Tail direction={getDirection(snake[1], snake[0])} opacity={tailOpacity} />\n          ) : snake.includes(number) ? (\n            <Body corner={checkIfCorner(snake, number)} />\n          ) : (\n            number === foodPosition && food\n          )}\n        </Cell>\n      ))}\n    </Container>\n  );\n};\n\nexport default Grid;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  @media screen and (min-width: 600px) {\n    display: none;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Button = styled.button`\n  font-size: 24px;\n  margin: 5px;\n  background-color: white;\n  border: 3px solid orange;\n  border-radius: 10px;\n  color: orange;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  @media screen and (max-width: 600px) {\n    width: 12vw;\n    height: 12vw;\n  }\n`;\n","import React from 'react';\nimport { Container, Row, Button } from './styles';\n\ninterface Props {\n  onClick: (e: { key: string }) => void\n}\n\nconst Arrows: React.FC<Props> = ({ onClick }) => (\n  <Container>\n    <Row>\n      <Button onClick={() => onClick({ key: 'ArrowUp' })}>↑</Button>\n    </Row>\n    <Row>\n      <Button onClick={() => onClick({ key: 'ArrowLeft' })}>←</Button>\n      <Button onClick={() => onClick({ key: 'ArrowDown' })}>↓</Button>\n      <Button onClick={() => onClick({ key: 'ArrowRight' })}>→</Button>\n    </Row>\n  </Container>\n);\n\nexport default Arrows;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: space-between;\n  background-color: blue;\n  padding: 20px;\n  border-radius: 10px;\n`;\n\nexport const Text = styled.h1`\n  color: white;\n  margin-top: 0;\n`;\n\nexport const Button = styled.button`\n  margin: 10px;\n  padding: 5px;\n  background-color: orange;\n  border: 4px solid orange;\n  border-radius: 10px;\n  font-size: 18px;\n`;\n","import React from 'react';\nimport { Overlay, Container, Text, Button } from './styles';\n\ninterface Props {\n  onClose: () => void\n}\n\nconst GameOver: React.FC<Props> = ({ onClose }) => (\n  <Overlay>\n    <Container>\n      <Text>\n        Game over!{' '}\n        <span role=\"img\" aria-label=\"snake\">\n          🐍\n        </span>\n      </Text>\n      <Button onClick={onClose}>Close</Button>\n    </Container>\n  </Overlay>\n);\n\nexport default GameOver;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background-color: blue;\n  padding: 20px;\n  border-radius: 10px;\n  color: white;\n  margin: auto;\n  max-width: 80vw;\n  max-height: 70vh;\n  overflow-y: auto;\n  @media screen and (min-width: 600px) {\n    max-width: 500px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 10px;\n  padding: 5px;\n  background-color: orange;\n  border: 4px solid orange;\n  border-radius: 10px;\n  font-size: 18px;\n  flex-shrink: 0;\n`;\n","import React from 'react';\nimport { Overlay, Container, Button } from './styles';\n\ninterface Props {\n  onClose: () => void\n}\n\nconst Instructions: React.FC<Props> = ({ onClose }) => (\n  <Overlay>\n    <Container>\n      <h2>How to Play</h2>\n      <ul>\n        <li>The aim of the game is to eat as many items of food as possible without bumping into yourself.</li>\n        <li>\n          Press Play to start moving, and to change direction use keyboard arrow keys, or the buttons at the bottom of\n          your screen if playing on mobile.\n        </li>\n        <li>\n          When you eat a fruit, a new one will appear somewhere else on the grid, your tail will get longer, and your\n          speed will increase.\n        </li>\n        <li>\n          If you reach the edge of the grid, the laws of physics will cease to apply and your head will reappear on\n          the opposite side. This can be a good way to avoid bumping into your own tail.\n        </li>\n      </ul>\n      <Button onClick={onClose}>Close</Button>\n    </Container>\n  </Overlay>\n);\n\nexport default Instructions;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport useInterval from './hooks/useInterval';\nimport { originalSnake, getRandomFood, getFoodPosition, getNewSnake } from './helpers';\nimport Controls from './components/Controls';\nimport Grid from './components/Grid';\nimport Arrows from './components/Arrows';\nimport GameOver from './components/GameOver';\nimport Instructions from './components/Instructions';\nimport './App.css';\n\nfunction App() {\n  const [snake, setSnake] = useState<number[]>(originalSnake());\n  const [direction, setDirection] = useState<string>('right');\n  const [interval, setInterval] = useState<number|null>(null);\n  const [score, setScore] = useState<number>(0);\n  const [instructions, toggleInstructions] = useState<boolean>(false);\n  const [tailAppearing, setTailAppearing] = useState<boolean>(false);\n  const [gameOver, toggleGameOver] = useState<boolean>(false);\n  const [foodPosition, setFoodPosition] = useState<number|null>(null);\n  const [food, setFood] = useState<string|null>(null);\n  const [highScore, setHighScore] = useState<number>(+(localStorage.getItem(\"highScore\") || 0));\n\n  function startGame() {\n    setSnake(originalSnake());\n    setDirection('right');\n    setScore(0);\n    setFood(getRandomFood());\n    setFoodPosition(getFoodPosition(snake));\n    setInterval(500);\n  }\n\n  function turn({ key }: { key: string }) {\n    if (key.indexOf('Arrow') === 0) {\n      const newDirection = key.replace('Arrow', '').toLowerCase();\n      setDirection(newDirection);\n    } else {\n      return;\n    }\n  }\n\n  const checkPosition = useCallback((snake) => {\n    // If you eat the food\n    if (snake[snake.length - 1] === foodPosition) {\n      setSnake([snake[0] - (snake[1] - snake[0] * -1), ...snake]);\n      setTailAppearing(true);\n      setFood(getRandomFood());\n      setFoodPosition(getFoodPosition(snake));\n      setScore(score + 10);\n      setInterval(i => i ? i * 0.98 : null);\n      // If you bump into yourself\n    } else if (snake.slice(0, snake.length - 1).includes(snake[snake.length - 1])) {\n      setSnake(originalSnake());\n      setDirection('right');\n      setInterval(null);\n      setFoodPosition(null);\n      if (score > highScore) {\n        setHighScore(score);\n        localStorage.setItem(\"highScore\", score.toString());\n      }\n      toggleGameOver(true);\n    } else {\n      setTailAppearing(false);\n    }\n  }, [foodPosition, score, highScore]);\n\n  useInterval(() => {\n    const newSnake = getNewSnake(snake, direction);\n    setSnake(newSnake);\n  }, interval);\n\n  useEffect(() => checkPosition(snake), [snake, checkPosition]);\n\n  return (\n    <div className=\"game\" role=\"button\" tabIndex={0} onKeyDown={turn}>\n      {instructions && <Instructions onClose={() => toggleInstructions(false)} />}\n      <div>\n        <Controls\n          onClick={startGame}\n          score={score}\n          highScore={highScore}\n          openInstructions={() => toggleInstructions(true)}\n        />\n        <Grid\n          snake={snake}\n          food={food}\n          foodPosition={foodPosition}\n          direction={direction}\n          tailAppearing={tailAppearing}\n        />\n        <Arrows onClick={turn} />\n        {gameOver && <GameOver onClose={() => toggleGameOver(false)} />}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}